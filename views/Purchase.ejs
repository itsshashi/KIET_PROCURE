<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Purchase Orders</title>
  <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100 p-6">
  <h1 class="text-2xl font-bold mb-6 text-center">üìë Purchase Orders</h1>

  <!-- Table -->
  <div class="overflow-x-auto bg-white shadow-md rounded-lg">
    <table class="min-w-full text-sm text-left">
      <thead class="bg-gray-200 text-gray-600 uppercase text-xs">
        <tr>
          <th class="px-4 py-2">Order ID</th>
          <th class="px-4 py-2">Project</th>
          <th class="px-4 py-2">Supplier</th>
          <th class="px-4 py-2">Requested By</th>
          <th class="px-4 py-2">Date Required</th>
          <th class="px-4 py-2">Amount</th>
          <th class="px-4 py-2">Status</th>
          <th class="px-4 py-2">Actions</th>
        </tr>
      </thead>
      <tbody id="ordersTable" class="divide-y"></tbody>
    </table>
  </div>

  <!-- View Modal -->
  <div id="viewModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded-lg shadow-lg w-3/4 p-4">
      <div class="flex justify-between items-center border-b pb-2 mb-4">
        <h2 class="text-lg font-semibold">View Quotation</h2>
        <button onclick="closeView()" class="text-red-500 font-bold">X</button>
      </div>
      <iframe id="quotationPreview" class="w-full h-[500px]" frameborder="0"></iframe>
    </div>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center">
    <div class="bg-white rounded-lg shadow-lg w-[400px] p-6">
      <h2 class="text-lg font-semibold mb-4">Upload New Quotation</h2>
      <input type="file" id="newQuotationFile" class="mb-4 border p-2 w-full" accept="application/pdf" />
      <div class="flex justify-end gap-3">
        <button onclick="closeEdit()" class="px-4 py-2 bg-gray-400 rounded text-white">Cancel</button>
        <button onclick="saveQuotation()" class="px-4 py-2 bg-blue-600 rounded text-white">Save</button>
      </div>
    </div>
  </div>

  <script>
    const API_URL = "http://localhost:3000/api/orders";
    let currentEditId = null;

    async function loadOrders() {
      const res = await fetch(API_URL);
      const orders = await res.json();
      const tbody = document.getElementById("ordersTable");
      tbody.innerHTML = "";

      orders.forEach(order => {
        const tr = document.createElement("tr");
        tr.innerHTML = `
  <td class="px-4 py-2">${order.order_id}</td>
  <td class="px-4 py-2">${order.project}</td>
  <td class="px-4 py-2">${order.supplier}</td>
  <td class="px-4 py-2">${order.requested_by}</td>
  <td class="px-4 py-2">${order.date_required}</td>
  <td class="px-4 py-2">‚Çπ${order.total_amount.toLocaleString()}</td>
  <td class="px-4 py-2">
    <span class="px-2 py-1 rounded text-white ${
      order.status === 'pending' ? 'bg-yellow-500' : 'bg-green-600'
    }">
      ${order.status}
    </span>
  </td>
  <td class="px-4 py-2 flex gap-2">
    <button onclick="viewOrder('${order.quotation_file}')" class="px-3 py-1 bg-blue-500 text-white rounded">View</button>
    <button onclick="editOrder(${order.id})" class="px-3 py-1 bg-green-600 text-white rounded">Edit</button>
    ${order.status === 'pending' 
      ? `<button onclick="approveOrder(${order.id})" class="px-3 py-1 bg-purple-600 text-white rounded">Approve</button>` 
      : ""}
  </td>
`;

        tbody.appendChild(tr);
      });
    }

    function viewOrder(fileName) {
      document.getElementById("quotationPreview").src = "/uploads/" + fileName;
      document.getElementById("viewModal").classList.remove("hidden");
    }
    function closeView() {
      document.getElementById("viewModal").classList.add("hidden");
    }

    function editOrder(id) {
      currentEditId = id;
      document.getElementById("editModal").classList.remove("hidden");
    }
    function closeEdit() {
      document.getElementById("editModal").classList.add("hidden");
    }



    

    async function saveQuotation() {
      const file = document.getElementById("newQuotationFile").files[0];
      if (!file) return alert("Please choose a file");

      const formData = new FormData();
      formData.append("quotation", file);

      const res = await fetch(`${API_URL}/${currentEditId}/quotation`, {
        method: "PUT",
        body: formData
      });

      if (res.ok) {
        alert("Quotation updated ‚úÖ");
        closeEdit();
        loadOrders();
      } else {
        alert("Failed to update quotation ‚ùå");
      }
    }







    async function approveOrder(id) {
  const confirmApprove = confirm("Are you sure you want to approve this order?");
  if (!confirmApprove) return;

    const res = await fetch(`${API_URL}/${id}/purchase`, { method: "PUT" });
    if (res.ok) {
        alert("Order approved ‚úÖ");
        loadOrders();
    } else {
        alert("Failed to approve order ‚ùå");
    }
    }


    loadOrders();
  </script>
</body>
</html>
