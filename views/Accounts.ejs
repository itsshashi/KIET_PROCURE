<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Account Dashboard</title>
  
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: linear-gradient(135deg, #f8f9fa, #e9ecef);
      color: #333;
      margin: 0;
      padding: 0;
    }

    /* Navbar */
    .navbar {
      background: #1e40af;
      color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 12px 24px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.15);
    }
    .navbar .logo {
      display: flex;
      align-items: center;
      gap: 10px;
    }
    .navbar img {
      width: 140px;
      height: 120px;
      border-radius: 50%;
    }
    .navbar h2 {
      font-size: 20px;
      margin: 0;
    }
    .navbar .user-section {
      display: flex;
      align-items: center;
      gap: 15px;
      font-size: 16px;
    }
    .logout-btn {
      background: #ef4444;
      border: none;
      padding: 6px 14px;
      color: white;
      font-size: 14px;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .logout-btn:hover {
      background: #dc2626;
    }

    .container {
      max-width: 1000px;
      margin: 40px auto;
      padding: 20px;
    }
    h1 {
      text-align: center;
      color: #1e293b;
      margin-bottom: 30px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      background: white;
      box-shadow: 0 4px 15px rgba(0,0,0,0.08);
      border-radius: 12px;
      overflow: hidden;
    }
    thead {
      background: #1e40af;
      color: white;
    }
    th, td {
      padding: 14px 18px;
      text-align: center;
    }
    tr:nth-child(even) {
      background: #f8fafc;
    }
    .pay-btn, .paid-btn {
      border: none;
      padding: 8px 16px;
      color: white;
      font-size: 14px;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s ease;
    }
    .pay-btn {
      background: #22c55e;
      margin-right: 8px;
    }
    .pay-btn:hover {
      background: #16a34a;
    }
    .paid-btn {
      background: #3b82f6;
    }
    .paid-btn:hover {
      background: #2563eb;
    }
    .paid-btn:disabled {
      background: #94a3b8;
      cursor: not-allowed;
    }

    .download-btn {
      background: #10b981;
      border: none;
      padding: 8px 16px;
      color: white;
      font-size: 14px;
      border-radius: 8px;
      cursor: pointer;
      transition: background 0.3s ease;
      margin-right: 8px;
    }

    .download-btn:hover {
      background: #059669;
    }

    .download-btn:disabled {
      background: #94a3b8;
      cursor: not-allowed;
    }

    /* Modal Styles */
    .modal {
      display: none;
      position: fixed;
      inset: 0;
      background: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
      z-index: 1000;
    }
    .modal-content {
      background: white;
      padding: 25px;
      border-radius: 14px;
      width: 400px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.2);
      text-align: center;
      animation: slideIn 0.4s ease;
    }
    .modal-content h2 {
      margin-bottom: 20px;
      color: #1e293b;
    }
    .bank-details {
      text-align: left;
      margin: 15px 0;
      font-size: 16px;
    }
    .close-btn {
      margin-top: 20px;
      background: #ef4444;
      border: none;
      padding: 8px 16px;
      color: white;
      font-size: 14px;
      border-radius: 8px;
      cursor: pointer;
    }
    .close-btn:hover {
      background: #dc2626;
    }

    /* Payment Done Popup */
    .done-popup {
      display: none;
      position: fixed;
      top: 20px;
      right: 20px;
      background: #16a34a;
      color: white;
      padding: 12px 20px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      font-weight: 500;
      animation: fadeInOut 3s ease forwards;
      z-index: 1001;
    }
    
    .error-popup {
      display: none;
      position: fixed;
      top: 20px;
      right: 20px;
      background: #ef4444;
      color: white;
      padding: 12px 20px;
      border-radius: 8px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.2);
      font-weight: 500;
      animation: fadeInOut 3s ease forwards;
      z-index: 1001;
    }

    @keyframes slideIn {
      from { transform: translateY(-30px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    @keyframes fadeInOut {
      0% { opacity: 0; transform: translateY(-10px); }
      10% { opacity: 1; transform: translateY(0); }
      90% { opacity: 1; }
      100% { opacity: 0; transform: translateY(-10px); }
    }

    /* Loading spinner */
    .spinner {
      border: 4px solid rgba(0, 0, 0, 0.1);
      border-left-color: #3b82f6;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      animation: spin 1s linear infinite;
      display: inline-block;
      margin-right: 10px;
      vertical-align: middle;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
      .navbar {
        flex-direction: column;
        padding: 10px 15px;
      }
      .navbar .logo {
        margin-bottom: 10px;
      }
      .navbar img {
        width: 100px;
        height: 80px;
      }
      .navbar h2 {
        font-size: 18px;
      }
      .navbar .user-section {
        font-size: 14px;
        gap: 10px;
      }
      .logout-btn {
        padding: 5px 12px;
        font-size: 12px;
      }

      .container {
        max-width: 95%;
        margin: 20px auto;
        padding: 15px;
      }
      h1 {
        font-size: 24px;
        margin-bottom: 20px;
      }

      .container > div {
        margin-bottom: 15px;
      }
      #poSearch {
        width: 100%;
        margin-bottom: 10px;
      }
      .container > div button {
        width: 100%;
        margin-bottom: 10px;
      }

      table {
        font-size: 14px;
      }
      th, td {
        padding: 10px 8px;
      }
      .pay-btn, .paid-btn {
        padding: 6px 12px;
        font-size: 12px;
        margin-right: 5px;
      }

      .modal-content {
        width: 90%;
        padding: 20px;
      }
      .bank-details {
        font-size: 14px;
      }
      .close-btn {
        padding: 6px 14px;
        font-size: 12px;
      }

      .done-popup, .error-popup {
        padding: 10px 15px;
        font-size: 14px;
      }
    }

    @media (max-width: 480px) {
      .navbar {
        padding: 8px 10px;
      }
      .navbar img {
        width: 80px;
        height: 60px;
      }
      .navbar h2 {
        font-size: 16px;
      }
      .navbar .user-section {
        font-size: 12px;
        flex-direction: column;
        align-items: flex-start;
        gap: 5px;
      }
      .logout-btn {
        align-self: flex-end;
        padding: 4px 10px;
        font-size: 11px;
      }

      .container {
        max-width: 100%;
        margin: 15px auto;
        padding: 10px;
      }
      h1 {
        font-size: 20px;
        margin-bottom: 15px;
      }

      #poSearch {
        font-size: 14px;
        padding: 8px;
      }
      .container > div button {
        font-size: 14px;
        padding: 8px 12px;
      }

      table {
        font-size: 12px;
        overflow-x: auto;
        display: block;
        white-space: nowrap;
      }
      thead, tbody, tr, th, td {
        display: block;
      }
      thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
      }
      tr {
        border: 1px solid #ccc;
        margin-bottom: 10px;
        border-radius: 8px;
      }
      td {
        border: none;
        border-bottom: 1px solid #eee;
        position: relative;
        padding-left: 50%;
        text-align: left;
      }
      td:before {
        content: attr(data-label);
        position: absolute;
        left: 6px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
        font-weight: bold;
      }
      .pay-btn, .paid-btn {
        padding: 5px 10px;
        font-size: 11px;
        margin-right: 5px;
        margin-top: 5px;
      }

      .modal {
        align-items: flex-start;
        padding-top: 20px;
      }
      .modal-content {
        width: 95%;
        max-width: none;
        padding: 15px;
        border-radius: 10px;
      }
      .bank-details {
        font-size: 13px;
      }
      .close-btn {
        padding: 5px 12px;
        font-size: 11px;
      }

      .done-popup, .error-popup {
        padding: 8px 12px;
        font-size: 12px;
      }
    }
  </style>
</head>
<body>
  <!-- Navbar -->
  <div class="navbar">
    <div class="logo">
      <img src="images/wt_img.png" alt="Company Logo">
    </div>
    <div class="user-section">
      <span><i class="fa fa-user"></i> accounts@kietsindia.com</span>
      <button class="logout-btn" onclick="logout()">Logout</button>
    </div>
  </div>

  <!-- Main Container -->
  <div class="container">
    <h1>Account Dashboard</h1>
    <div style="margin-bottom: 20px;">
      <label for="poSearch">Search by PO Number:</label>
      <input type="text" id="poSearch" placeholder="Enter PO Number" style="margin-left: 10px; padding: 5px;">
      <button onclick="searchByPO()" style="margin-left: 10px; padding: 5px 10px;">Search</button>
      <button onclick="clearSearch()" style="margin-left: 10px; padding: 5px 10px;">Clear</button>
    </div>
    <table>
      <thead>
        <tr>
          <th>PO Number</th>
          <th>Supplier</th>
          <th>Amount to Pay</th>
          <th>Terms to Pay</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody id="accountTableBody">
        <!-- Data will be populated here -->
      </tbody>
    </table>
    <div id="noDataMessage" style="text-align: center; margin-top: 20px; display: none;">
      No payment details found.
    </div>
  </div>

  <!-- Modal -->
  <div class="modal" id="paymentModal">
    <div class="modal-content">
      <h2>Supplier Bank Details</h2>
      <div class="bank-details" id="bankDetails"></div>
      <button class="close-btn" onclick="closeModal()">Close</button>
    </div>
  </div>

  <!-- Payment Done Popup -->
  <div class="done-popup" id="donePopup">
    ✅ Payment Done Successfully!
  </div>
  
  <!-- Error Popup -->
  <div class="error-popup" id="errorPopup">
    ❌ Error processing payment
  </div>

  <script>
    let accountData = [];
    let currentOrderId = null;

    async function fetchAccountDetails(poNumber = '') {
      try {
        document.getElementById('noDataMessage').style.display = 'none';
        
        let url = '/api/account-details';
        if (poNumber) {
          url += `?po_number=${encodeURIComponent(poNumber)}`;
        }
        
        const response = await fetch(url, { credentials: 'include' });
        
        if (response.status === 401) {
          alert('You are not logged in. Redirecting to login page.');
          window.location.href = '/';
          return;
        }
        
        if (!response.ok) {
          throw new Error('Failed to fetch account details');
        }
        
        const data = await response.json();
        
        if (data.message) {
          document.getElementById('noDataMessage').style.display = 'block';
          accountData = [];
          populateTable();
          return;
        }
        
        accountData = data;
        populateTable();
      } catch (error) {
        console.error('Error fetching account details:', error);
        document.getElementById('noDataMessage').style.display = 'block';
        accountData = [];
        populateTable();
      }
    }

    function searchByPO() {
      const poNumber = document.getElementById('poSearch').value.trim();
      fetchAccountDetails(poNumber);
    }

    function clearSearch() {
      document.getElementById('poSearch').value = '';
      fetchAccountDetails();
    }

    function populateTable() {
      const tbody = document.getElementById('accountTableBody');
      tbody.innerHTML = '';
      
      if (accountData.length === 0) {
        document.getElementById('noDataMessage').style.display = 'block';
        return;
      }
      
      document.getElementById('noDataMessage').style.display = 'none';
      
      accountData.forEach(item => {
        const tr = document.createElement('tr');

        // PO Number
        const poNumberTd = document.createElement('td');
        poNumberTd.setAttribute('data-label', 'PO Number');
        poNumberTd.textContent = item.po_number || 'N/A';
        tr.appendChild(poNumberTd);

        // Supplier
        const supplierTd = document.createElement('td');
        supplierTd.setAttribute('data-label', 'Supplier');
        supplierTd.textContent = item.supplier_name || 'N/A';
        tr.appendChild(supplierTd);

        // Amount
        const amountTd = document.createElement('td');
        amountTd.setAttribute('data-label', 'Amount to Pay');
        amountTd.textContent = `₹${item.amount ? parseFloat(item.amount).toFixed(2) : '0.00'}`;
        tr.appendChild(amountTd);

        // Terms
        const termsTd = document.createElement('td');
        termsTd.setAttribute('data-label', 'Terms to Pay');
        termsTd.textContent = item.terms_of_payment || 'N/A';
        tr.appendChild(termsTd);

        // Action buttons
        const actionTd = document.createElement('td');
        actionTd.setAttribute('data-label', 'Action');

        // Pay button
        const payBtn = document.createElement('button');
        payBtn.className = 'pay-btn';
        payBtn.textContent = 'View Bank Details';
        payBtn.onclick = () => openModal(item);
        actionTd.appendChild(payBtn);

        // Paid button
        const paidBtn = document.createElement('button');
        paidBtn.className = 'paid-btn';
        paidBtn.textContent = 'Mark as Paid';
        paidBtn.onclick = () => markAsPaid(item);
        actionTd.appendChild(paidBtn);

        // Download Invoice button
        const downloadBtn = document.createElement('button');
        downloadBtn.className = 'download-btn';
        downloadBtn.textContent = 'Download Invoice';
        downloadBtn.onclick = () => downloadInvoice(item.po_number);
        actionTd.appendChild(downloadBtn);

        tr.appendChild(actionTd);
        tbody.appendChild(tr);
      });
    }

    function openModal(item) {
      if (!item) return;
      const info = {
        account: item.supplier_account_number || 'N/A',
        ifsc: item.supplier_ifsc_code || 'N/A',
        bank: item.supplier_account_name || 'N/A'
      };
      document.getElementById('bankDetails').innerHTML = `
        <p><strong>Supplier:</strong> ${item.supplier_name || 'N/A'}</p>
        <p><strong>Account Number:</strong> ${info.account}</p>
        <p><strong>IFSC Code:</strong> ${info.ifsc}</p>
        <p><strong>Bank Name:</strong> ${info.bank}</p>
      `;
      document.getElementById('paymentModal').style.display = 'flex';
    }

    function closeModal() {
      document.getElementById('paymentModal').style.display = 'none';
    }

    async function markAsPaid(item) {
  if (!item.id) {
    showError('Order ID not found');
    return;
  }

  try {
    const response = await fetch(`/api/orders/${item.id}/status`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      credentials: 'include',
      body: JSON.stringify({ status: 'paid' })
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.error || 'Failed to update status');
    }

    const result = await response.json();

    if (result.success) {
      showSuccess();

      // ✅ Remove from local data
      accountData = accountData.filter(order => order.id !== item.id);

      // ✅ Refresh the table
      populateTable();
    } else {
      throw new Error('Status update failed');
    }
  } catch (error) {
    console.error('Error updating status:', error);
    showError(error.message || 'Error processing payment');
  }
}

    function removeOrderFromTable(orderId) {
      // Find and remove the table row containing this order
      const tableBody = document.getElementById('accountTableBody');
      const rows = tableBody.querySelectorAll('tr');

      rows.forEach(row => {
        // Check if this row contains the order with the matching ID
        // We need to find the row that has the order data matching this ID
        const actionCell = row.querySelector('td:last-child');
        if (actionCell) {
          const paidBtn = actionCell.querySelector('.paid-btn');
          if (paidBtn && paidBtn.onclick) {
            // Extract the item from the onclick function to check the ID
            const onclickString = paidBtn.onclick.toString();
            if (onclickString.includes(`item.id`) && onclickString.includes(orderId)) {
              row.remove();
              return;
            }
          }
        }
      });

      // Update the accountData array to remove this item
      accountData = accountData.filter(item => item.id !== orderId);

      // Check if table is now empty and show "no data" message if needed
      if (accountData.length === 0) {
        document.getElementById('noDataMessage').style.display = 'block';
      }
    }

    function showSuccess() {
      const popup = document.getElementById('donePopup');
      popup.style.display = 'block';
      setTimeout(() => { 
        popup.style.display = 'none'; 
      }, 3000);
    }
    
    function showError(message) {
      const popup = document.getElementById('errorPopup');
      popup.innerHTML = `❌ ${message}`;
      popup.style.display = 'block';
      setTimeout(() => { 
        popup.style.display = 'none'; 
      }, 3000);
    }

    function logout() {
      fetch('/api/logout', {
        method: 'POST',
        credentials: 'include'
      })
      .then(() => {
        window.location.href = '/';
      })
      .catch(err => {
        console.error('Logout error:', err);
        window.location.href = '/';
      });
    }

    async function downloadInvoice(poNumber) {
      try {
        const response = await fetch(`/api/invoice/${poNumber}`, { credentials: 'include' });
        if (!response.ok) throw new Error('Failed to download invoice');
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `invoice_${poNumber}.pdf`;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
        window.URL.revokeObjectURL(url);
      } catch (error) {
        console.error('Error downloading invoice:', error);
        showError('Failed to download invoice');
      }
    }

    // Fetch account details on page load
    window.onload = fetchAccountDetails;
  </script>
</body>
</html>